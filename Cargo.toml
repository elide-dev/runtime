[package]
name = "elide"
version = "0.0.1"
authors = ["Sam Gammon"]
edition = "2021"
license = "MIT/Apache-2.0"
readme = "README.md"
documentation = "https://docs.elide.dev/"
description = """
The Elide polyglot application runtime.
"""

[lib]
crate-type = ["cdylib", "rlib"]
path = "elide/runtime/rs/lib.rs"

[features]
default = ["console_error_panic_hook", "std"]
spans = ["wasm-bindgen-macro/spans"]
std = []
serde-serialize = ["serde", "serde_json", "std"]
enable-interning = ["std"]
strict-macro = ["wasm-bindgen-macro/strict-macro"]

[dependencies]
wasm-bindgen = "0.2.83"
wasm-streams = "0.3.0"
wasm-bindgen-futures = "0.4.33"
wasm-bindgen-macro = "0.2.83"
serde = { version = "1.0", optional = true, features = ["derive"] }
serde_json = { version = "1.0", optional = true }
serde-wasm-bindgen = "0.4"
workers = "0.1.0"
flatbuffers = "22.10.26"
protobuf = "3.5.0"
jni = "0.20.0"
js-sys = "0.3.60"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }

[dependencies.web-sys]
version = "0.3.60"
features = [
    "AbortController",
    "AbortSignal",
    "Blob",
    "Headers",
    "Response",
    "ResponseInit",
    "Url",
    "UrlSearchParams",
    "console",
]

[dev-dependencies]
wasm-bindgen-test = "0.3.33"
wasm-bindgen-cli = "0.2.83"

[profile.release]
opt-level = 3

package(
    default_visibility = ["//visibility:public"],
)

load(
    "//tools/defs/rust:exports.bzl",
    "all_crate_deps",
    "rust_binary",
    "rust_library",
    "rust_shared_library",
    "rust_wasm_bindgen",
)
load(
    "//tools/defs/wasm:exports.bzl",
    "wasm_rust_binary",
)
load(
    "//tools/defs/java:exports.bzl",
    "java_library",
)
load(
    "//tools/defs/kt:exports.bzl",
    "kt_jvm_binary",
)

rust_binary(
    name = "hello_world_bin_wasm",
    srcs = ["main.rs"],
    edition = "2018",
    deps = [
        "@rules_rust//wasm_bindgen/3rdparty:wasm_bindgen",
    ],
)

rust_shared_library(
    name = "hello_world_lib_wasm",
    srcs = ["main.rs"],
    edition = "2018",
    deps = [
        "@rules_rust//wasm_bindgen/3rdparty:wasm_bindgen",
    ],
)

rust_wasm_bindgen(
    name = "hello_world_bundler_wasm_bindgen",
    wasm_file = ":hello_world_bin_wasm",
)

rust_wasm_bindgen(
    name = "hello_world_web_wasm_bindgen",
    target = "web",
    wasm_file = ":hello_world_lib_wasm",
)

rust_wasm_bindgen(
    name = "hello_world_deno_wasm_bindgen",
    target = "deno",
    wasm_file = ":hello_world_lib_wasm",
)


RUST_LIBS = [
    "@rules_rust//wasm_bindgen/3rdparty:wasm_bindgen",
]

RUST_MODULES = RUST_LIBS + [
    "@crates//:js-sys",
    "@crates//:web-sys",
]

rust_library(
    name = "lib",
    srcs = [
        "lib.rs",
        "utils.rs",
    ],
    deps = RUST_MODULES + [],
)

# rust_shared_library(
#     name = "runtime-shared",
#     srcs = ["runtime.rs"],
#     crate_features = ["console_error_panic_hook"],
#     crate_name = "elide",
#     crate_root = "runtime.rs",
#     deps = RUST_MODULES + [
#         ":lib",
#     ],
# )

rust_binary(
    name = "runtime",
    srcs = ["runtime.rs"],
    crate_features = ["console_error_panic_hook"],
    crate_name = "elide",
    crate_root = "runtime.rs",
    rustc_flags = ["--emit=llvm-bc"],
    deps = RUST_MODULES + [
        ":lib",
    ],
    extra_outputs = [
        "elide.bc",
    ],
)

#filegroup(
#    name = "bitcode",
#    srcs = ["runtime.bc"],
#)
#
#filegroup(
#    name = "outs",
#    srcs = [
#        ":runtime",
#        ":bitcode",
#    ]
#)

#rust_wasm_bindgen(
#    name = "runtime-wasm-bindgen",
#    wasm_file = ":runtime",
#)

#wasm_rust_binary(
#    name = "runtime",
#    srcs = ["runtime.rs"],
#    crate_features = ["console_error_panic_hook"],
#    crate_name = "elide",
#    crate_root = "runtime.rs",
#    deps = RUST_MODULES + [
#        ":lib",
#    ],
#)

#java_library(
#    name = "runtime-jni",
#    srcs = ["ElideNativeRuntime.java"],
#    deps = [],
#)

#kt_jvm_binary(
#    name = "runtime-jvm",
#    main_class = "com.elide.runtime.ElideRuntime",
#    deps = [":runtime-jni"],
#)

alias(
    name = "rs",
    actual = "runtime",
)

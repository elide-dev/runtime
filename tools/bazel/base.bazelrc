
#
# Bazel: Baseline Settings
#

startup --host_jvm_args=-Dbazel.DigestFunction=SHA256

build --worker_sandboxing
build --strategy=J2cl=worker
build --strategy=Closure=worker
build --strategy=JdepsMerger=worker
build --strategy=KotlinCompile=worker
build --strategy=Javac=worker
build --strategy=JavaIjar=local
build --strategy=JavaDeployJar=local
build --strategy=JavaSourceJar=local
build --strategy=Turbine=local
build --strategy=TypeScriptCompile=sandboxed,local
build --workspace_status_command=$(pwd)/tools/status.sh
build --ui_event_filters=-debug,-stderr

build --javacopt='--release 11'
build --javacopt="-encoding UTF-8"
build --use_ijars
build --java_header_compilation
build --interface_shared_objects
build --enable_platform_specific_config

build --java_language_version=11
build --tool_java_language_version=11
build --java_runtime_version=remotejdk_11
build --tool_java_runtime_version=remotejdk_11

build --incompatible_strict_action_env=false
build --incompatible_java_common_parameters=false

build:buildbuddy --bes_results_url=https://app.buildbuddy.io/invocation/
build:buildbuddy --bes_backend=grpcs://remote.buildbuddy.io

build --experimental_persistent_javac
build --experimental_allow_tags_propagation
build --experimental_split_xml_generation
build --experimental_cc_shared_library
build --experimental_inmemory_dotd_files
build --experimental_inmemory_jdeps_files
build --experimental_strict_java_deps=strict
build --experimental_worker_multiplex
build --experimental_strict_action_env
build --experimental_use_validation_aspect
build --experimental_fetch_all_coverage_outputs
build --define=experimental_use_abi_jars=1

# Don't warn on deprecations when compiling protobufs.
# This generates a lot of spurious warnings when compiling the definitions of proto fields
# which are marked deprecated.
build --per_file_copt=.*\.pb\.cc@-Wno-deprecated-declarations
# Disable diagnostics on external repositories as we don't control them.
build --per_file_copt=external/.*@-w

# Disable diagnostics in host mode. There is no host_per_file_copt and
# everything we build in the host configuration we either also build in the
# target configuration or is external, so we can't control it.
# If/when Bazel supports --host_per_file_copt, we could use that instead:
# https://github.com/bazelbuild/bazel/issues/12406.
build --host_copt=-w

# run --incompatible_strict_action_env

test --incompatible_exclusive_test_sandboxed
test --test_sharding_strategy=disabled
test --test_output=errors

coverage --combined_report=lcov
coverage --collect_code_coverage
coverage --instrumentation_filter="^//elide"
coverage --instrument_test_targets

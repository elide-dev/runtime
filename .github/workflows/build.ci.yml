name: CI

on:
  push:
    branches:
      - main
      - gh-readonly-queue/main/*
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  ##
  ## Job: Pre-flight Checks
  ##
  preflight-checks:
    name: "Pre-flight Checks"
    runs-on: "ubuntu-latest"
    permissions:
      contents: "read"
      id-token: "write"
      checks: "write"
      pull-requests: "write"
    steps:
      - name: "Setup: Checkout"
        uses: "actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c" # v3
      - name: "Check: Dependency Review"
        uses: "actions/dependency-review-action@f46c48ed6d4f1227fb2d9ea62bf6bcbed315589e" # v3
        continue-on-error: true
        with:
          config-file: "./.github/dependency-review-config.yml"
          license-check: true
          vulnerability-check: true
          fail-on-severity: "low"
          base-ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref || 'v3' }}

  ##
  ## Job: Runtime Build
  ##

  bazel:
    name: "Build"
    runs-on: ubuntu-latest

    permissions:
      contents: "read"
      actions: "read"
      id-token: "write"
      checks: "write"
      pull-requests: "write"
      security-events: "write"

    defaults:
      run:
        shell: bash

    steps:
      - name: "Setup: Checkout"
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3
      - name: "Setup: GraalVM (Java ${{ vars.JVM_VERSION }})"
        uses: graalvm/setup-graalvm@b53bc17dd7dc3052d7c6751f6a5c34abdbf928b3 # v1
        with:
          components: "native-image,js"
          version: ${{ vars.GVM_VERSION }}
          java-version: ${{ vars.JVM_VERSION }}
          check-for-updates: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - id: "auth"
        name: "Setup: Authorize Service Account"
        uses: "google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d" # v1
        with:
          credentials_json: "${{ secrets.BUILDBOT_SERVICE_ACCOUNT }}"
          create_credentials_file: true
          export_environment_variables: true
          cleanup_credentials: true
      - name: "Setup: Node"
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
        with:
          node-version: ${{ vars.NODE_VERSION }}
      - name: "Setup: PNPM"
        run: npm install -g pnpm && pnpm install
      - name: "Setup: Binaryen"
        run: sudo bash -c 'curl -sSL https://github.com/WebAssembly/binaryen/releases/download/version_111/binaryen-version_111-x86_64-linux.tar.gz | tar -C /usr/local -xz --strip-components=1'
      - name: "Setup: Authorization"
        run: echo "build --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_API_KEY }}" > ~/.bazelrc
      - uses: bazelbuild/setup-bazelisk@95c9bf48d0c570bb3e28e57108f3450cd67c1a44 # v2
      - name: "🛠️ Build"
        id: bazelbuild
        run: bazel build --config=adc --config=ci //elide/runtime/ts //elide/runtime/js
      - name: "🛠️ Test"
        id: bazeltest
        env:
          CI: true
        run: bazel test --config=adc --config=ci //tests/...
